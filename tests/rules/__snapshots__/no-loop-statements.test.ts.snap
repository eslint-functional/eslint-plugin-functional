// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`no-loop-statements > javascript - es latest > reports do while loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 16,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "DoWhileStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "do {
  console.log("hello world");
} while (true);",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 16,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "DoWhileStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "do {
  console.log("hello world");
} while (true);",
    },
  ],
}
`;

exports[`no-loop-statements > javascript - es latest > reports for await loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "ForOfStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "for await (let i of []) {
  console.log("hello world");
}",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 2,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "ForOfStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "for await (let i of []) {
  console.log("hello world");
}",
    },
  ],
}
`;

exports[`no-loop-statements > javascript - es latest > reports for in loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "ForInStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "for (let i in []) {
  console.log("hello world");
}",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 2,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "ForInStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "for (let i in []) {
  console.log("hello world");
}",
    },
  ],
}
`;

exports[`no-loop-statements > javascript - es latest > reports for loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "ForStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "for (let i = 0; i < 10; i++) {
  console.log("hello world");
}",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 2,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "ForStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "for (let i = 0; i < 10; i++) {
  console.log("hello world");
}",
    },
  ],
}
`;

exports[`no-loop-statements > javascript - es latest > reports for of loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "ForOfStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "for (let i of []) {
  console.log("hello world");
}",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 2,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "ForOfStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "for (let i of []) {
  console.log("hello world");
}",
    },
  ],
}
`;

exports[`no-loop-statements > javascript - es latest > reports while loop statements 1`] = `
{
  "fixed": false,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 3,
      "line": 1,
      "message": "Unexpected loop, use map or reduce instead.",
      "messageId": "generic",
      "nodeType": "WhileStatement",
      "ruleId": "no-loop-statements",
      "severity": 2,
    },
  ],
  "output": "while (true) {
  console.log("hello world");
}",
  "steps": [
    {
      "fixed": false,
      "messages": [
        {
          "column": 1,
          "endColumn": 2,
          "endLine": 3,
          "line": 1,
          "message": "Unexpected loop, use map or reduce instead.",
          "messageId": "generic",
          "nodeType": "WhileStatement",
          "ruleId": "rule-to-test/no-loop-statements",
          "severity": 2,
        },
      ],
      "output": "while (true) {
  console.log("hello world");
}",
    },
  ],
}
`;
