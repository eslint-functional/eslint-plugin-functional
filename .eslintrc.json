{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin",
    "functional",
    "import",
    "jest",
    "jsdoc",
    "prettier"
  ],
  "env": {
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:eslint-plugin/recommended",
    "plugin:functional/recommended",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint"
  ],
  "parserOptions": {
    "ecmaVersion": 10,
    "project": [
      "./tsconfig.json",
      "./tests/tsconfig.json"
    ],
    "sourceType": "module"
  },
  "ignorePatterns": [
    "build/",
    "lib/"
  ],
  "rules": {
    // Built in.
    "no-param-reassign": "error",
    "no-var": "error",
    // Our rules.
    "functional/prefer-readonly-type": [
      "error",
      {
        "allowMutableReturnType": true
      }
    ],
    "functional/no-conditional-statement": [
      "error",
      {
        "allowReturningBranches": "ifExhaustive"
      }
    ],
    "functional/functional-parameters": [
      "error",
      {
        "ignorePattern": [
          "^tsInstalled$"
        ]
      }
    ]
  },
  "overrides": [
    // Top level files.
    {
      "files": [
        "*"
      ],
      "rules": {
        "functional/immutable-data": "off",
        "functional/functional-parameters": "off",
        "functional/no-expression-statement": "off"
      }
    },
    // TypeScript files.
    {
      "files": [
        "**/*.ts"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "generic"
          }
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Object": {
                "message": "Use object instead",
                "fixWith": "object"
              },
              "{}": false,
              "object": false
            },
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/prefer-interface": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars-experimental": [
          "warn",
          {
            "ignoredNamesRegex": "^_",
            "ignoreArgsIfArgsAfterAreUsed": true
          }
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
            "classes": true,
            "variables": true,
            "typedefs": true
          }
        ]
      }
    },
    // Source files.
    {
      "files": [
        "src/**/*"
      ],
      "rules": {
        // JSDoc.
        "jsdoc/check-alignment": "warn",
        "jsdoc/check-indentation": "warn",
        "jsdoc/check-param-names": "warn",
        "jsdoc/check-tag-names": "warn",
        "jsdoc/implements-on-classes": "warn",
        "jsdoc/newline-after-description": "warn",
        "jsdoc/no-types": "warn",
        "jsdoc/require-description": "warn",
        "jsdoc/require-description-complete-sentence": "warn",
        "jsdoc/require-hyphen-before-param-description": "warn",
        "jsdoc/require-jsdoc": "warn",
        "jsdoc/require-param-description": "warn",
        "jsdoc/require-param-name": "warn",
        "jsdoc/require-returns-check": "warn",
        "jsdoc/require-returns-description": "warn"
      }
    },
    // Testing Files.
    {
      "files": [
        "tests/**/*"
      ],
      "env": {
        "jest/globals": true
      },
      "extends": [
        "plugin:jest/recommended"
      ],
      "rules": {
        "functional/functional-parameters": "off",
        "functional/no-conditional-statement": "off",
        "functional/no-expression-statement": "off",
        "jest/no-alias-methods": "error",
        "jest/no-test-return-statement": "error",
        "jest/prefer-called-with": "warn",
        "jest/prefer-expect-assertions": "error",
        "jest/prefer-spy-on": "warn",
        "jest/prefer-strict-equal": "warn",
        "jest/prefer-to-be-null": "warn",
        "jest/prefer-to-be-undefined": "warn",
        "jest/prefer-to-contain": "warn",
        "jest/prefer-to-have-length": "warn",
        "jest/prefer-todo": "error"
      }
    }
  ],
  "settings": {
    "import/ignore": [
      "escape-string-regexp"
    ]
  }
}
