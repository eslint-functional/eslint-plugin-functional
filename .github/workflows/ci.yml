name: CI

on:
  - push
  - pull_request

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Skip Duplicate Actions
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          concurrent_skipping: "same_content"
          paths_ignore: '[".vscode/", "**/docs/**", "**/*.md"]'
          do_not_skip: '["pull_request"]'

  lint:
    name: Linting Checks
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --ignore-scripts --ignore-engines

      - name: Run Linting Checks
        run: yarn lint

      - name: Check spelling
        run: yarn check-spelling

  test:
    name: "Test - Node: ${{ matrix.node_version }} - TS: ${{ matrix.ts_version }} - OS: ${{ matrix.os }}"
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"
        node_version:
          - "12"
          - "14"
          - "16"
        ts_version:
          - "next"
          - "latest"
          - "3.4.1"
          - "JS"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.ts_version == 'next' }}
    env:
      REPORT_COVERAGE: ${{ fromJSON('["false", "true"]')[matrix.ts_version == 'latest' && matrix.node_version == '16' && matrix.os != 'ubuntu-latest'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetch all commits for codecov.
          fetch-depth: ${{ fromJSON('[0, 1]')[ env.REPORT_COVERAGE == 'true'] }}

      - name: Setup NodeJs for building
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --ignore-scripts --ignore-engines

      - name: Build
        run: yarn build

      - name: Compile Tests
        if: env.REPORT_COVERAGE == 'false'
        run: yarn compile-tests

      - name: Setup NodeJs ${{ matrix.node_version }} for testing
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: Remove Dev TypeScript
        run: yarn remove typescript --ignore-engines

      - name: Add TypeScript "${{ matrix.ts_version }}"
        if: matrix.ts_version != 'JS'
        run: yarn add -D typescript@"${{ matrix.ts_version }}" --ignore-engines

      - name: Remove incompatible settings for ts 3.4.1
        if: matrix.ts_version == '3.4.1'
        run: node -e 'const fs = require("fs"); const tsconfig = require("./tsconfig.base.json"); delete tsconfig.compilerOptions.exactOptionalPropertyTypes; fs.writeFileSync("./tsconfig.base.json", JSON.stringify(tsconfig));'

      - name: Run Tests
        run: yarn test
        env:
          USE_COMPILED_TESTS: ${{ env.REPORT_COVERAGE == 'false' }}

      - name: Report coverage
        uses: codecov/codecov-action@v3.1.0
        if: env.REPORT_COVERAGE == 'true'
        with:
          file: coverage/lcov.info
